---
- name: Adicionar Motd
  template:
    src: motd.sh
    dest: /etc/motd.sh
    force: yes
    owner: root
    group: root
    mode: 0755

- name: Alterando /etc/profile
  lineinfile:
    dest: /etc/profile
    line: "{{ item }}"
  with_items:
    - '#--- Default export & Alias ---#'
    - 'export HISTTIMEFORMAT="%d/%m/%Y - %H:%M:%S - "'
    - 'export HISTSIZE="5000"'
    - 'export HISTFILESIZE="5000"'
    - 'export TERM=linux'
    - 'alias ls="ls -lh --color"'
    - 'alias grep="grep --color"'
    - 'alias vi="vim"'
    - 'alias rm="rm -i"'
    - '/etc/motd.sh'

- name: Desable Selinux
  selinux: 
    state: disabled
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  
- name: Disable SELINUX Permanetemente
  replace:
    dest: /etc/selinux/config
    regexp: 'SELINUX=enforcing'
    replace: 'SELINUX=disabled'
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  
- name: YUM | Install epel-repository
  yum: 
    name: epel-release 
    state: latest
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  
- name: Enable PowerTool Repository (Apenas RedHat 8)
  replace:
    dest: /etc/yum.repos.d/CentOS-Linux-PowerTools.repo
    regexp: 'enabled=0'
    replace: 'enabled=1'
  when: ansible_distribution_major_version == "8"
  
- name: YUM | Update System
  yum: 
    name: "*"
    state: latest 
    update_cache: yes
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  
- name: YUM | Install common packages
  yum: 
    name: "{{ common_redhat }}"
    state: latest
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
     
- name: Debian Like | Update Cache
  apt: 
    update_cache: yes
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
  
- name: Debian Like | Update System
  apt: 
    name: "*" 
    state: latest
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
  
- name: Debian Like | Install common packages
  apt: 
    name: "{{ common_debian }}"
    state: latest
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
  
- name: USERS | Change root password
  user: 
    name: root 
    update_password: always 
    password: "{{ root_default_pass }}"
  
- name: USERS | Add user tux
  user:
    name: tux
    comment: "tux"
    shell: /bin/bash
    home: /home/tux
    password: "{{ tux_default_pass }}"
  
- name: USERS | Add user tux on Sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "tux    ALL=(ALL:ALL) NOPASSWD: ALL"
  
- name: VIM | Copy .vimrc default
  copy: src={{ item.src}} dest={{item.dest}}
  with_items:
    - { src: '.vimrc', dest: '/root/.vimrc' }
    - { src: '.vimrc', dest: '/home/tux/.vimrc' }
  
- name: TIME | Configurando localtime
  file: 
    src: /usr/share/zoneinfo/{{ timezone }} 
    dest: /etc/localtime 
    state: link 
    force: yes
  
- name: SSH | Setting basic SSH options
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
#    - { regexp: '#Port 22', line: 'Port 62222' }
    - { regexp: '#PermitRootLogin yes', line: 'PermitRootLogin no' }
    - { regexp: '#Banner none', line: 'Banner /etc/ssh/banner_ssh' }
    - { regexp: '#StrictModes yes', line: 'StrictModes yes' }
    - { regexp: 'X11Forwarding yes', line: 'X11Forwarding no' }
    - { regexp: 'PasswordAuthentication no', line: 'PasswordAuthentication yes' }
#  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name: SSH | Add SSH Banner
  copy: 
    src: banner_ssh 
    dest: /etc/ssh/banner_ssh 
  
- name: SSH | Generate SSH keys to tux user
  command: ssh-keygen -b 2048 -t rsa -f /home/tux/.ssh/id_rsa -N ''
  become: yes
  become_user: tux
  args:
    creates: /home/tux/.ssh/id_rsa